{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","tabsCount","Math","ceil","tabs","Array","fill","map","_","i","number","id","uuid","className","cn","disabled","href","onClick","tab","active","items","from","to","numbers","n","push","getNumbers","name","optioinsWithId","option","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","fromItem","toItem","visibleItems","slice","value","onChange","event","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"yNAWaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAOC,MAAMJ,GAAWK,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CACnDC,OAAQD,EAAI,EACZE,GAAIC,qBAeN,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBhB,IAFd,SAME,mBACE,UAAQ,WACRc,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBjB,EACfkB,QAnBY,WACE,IAAhBlB,GACFC,EAAaD,EAAc,IAYzB,oBAWDK,EAAKG,KAAI,SAAAW,GAAG,OACX,oBACEL,UAAWC,IACT,YACA,CAAEK,OAAQpB,IAAgBmB,EAAIR,SAHlC,SAOE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAI,WAAME,EAAIR,QACdO,QAAS,kBAAMjB,EAAakB,EAAIR,SAJlC,SAMGQ,EAAIR,UARFQ,EAAIP,OAab,oBAAIE,UAAWC,IACb,YACA,CAAEC,SAAUhB,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,gBAAejB,IAAgBE,EAC/BgB,QA5DY,WACdlB,IAAgBE,GAClBD,EAAaD,EAAc,IAqDzB,wBCxER,IAAMqB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBnB,KAAI,SAAAiB,GAAC,MAAK,CACTG,KAAK,QAAD,OAAUH,GACdb,GAAIC,iBACJF,OAAQc,MAINI,EADU,CAAC,EAAG,EAAG,GAAI,IACIrB,KAAI,SAAAsB,GAAM,MAAK,CAC5CF,KAAME,EACNlB,GAAIC,qBAGOkB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOhC,EAAP,KAAoBmC,EAApB,KACMC,EAAWH,EAAejC,GAAeiC,EAAe,GACxDI,EAAUJ,EAAejC,EAAc,GACxCiC,EAAejC,EAChB,GACEsC,EAAejB,EAAMkB,MAAMH,EAAW,EAAGC,GAW/C,OACE,sBAAKvB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWd,EADX,mBACiCoC,EADjC,cAC+CC,EAD/C,aAIA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRF,GAAG,kBACHE,UAAU,eACV0B,MAAOP,EACPQ,SAxBiB,SAACC,GAC1BR,GAAiBQ,EAAMC,OAAOH,OAC9BL,EAAe,IAiBT,SAOGN,EAAerB,KAAI,SAAAsB,GAAM,OACxB,wBAAQU,MAAOV,EAAOF,KAAtB,SAA6CE,EAAOF,MAAnBE,EAAOlB,WAK9C,uBAAOgC,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEhB,MAAO,GACPC,QAASkC,EACTjC,YAAaA,EACbC,aApCmB,SAAC4C,GACxBV,EAAeU,MAsCb,6BACGP,EAAa9B,KAAI,SAAAsC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,wBAA0CA,EAAKnC,SAAvBmC,EAAKlC,aEvEvCmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bbe19564.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\nimport { uuid } from 'uuidv4';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const tabsCount = Math.ceil(total / perPage);\n  const tabs = Array(tabsCount).fill(1).map((_, i) => ({\n    number: i + 1,\n    id: uuid(),\n  }));\n\n  const getNextPage = () => {\n    if (currentPage !== tabsCount) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const getPrevPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={getPrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {tabs.map(tab => (\n        <li\n          className={cn(\n            'page-item',\n            { active: currentPage === tab.number },\n          )}\n          key={tab.id}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${tab.number}`}\n            onClick={() => onPageChange(tab.number)}\n          >\n            {tab.number}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === tabsCount },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === tabsCount}\n          onClick={getNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { uuid } from 'uuidv4';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => ({\n    name: `Item ${n}`,\n    id: uuid(),\n    number: n,\n  }));\n\nconst options = [3, 5, 10, 20];\nconst optioinsWithId = options.map(option => ({\n  name: option,\n  id: uuid(),\n}));\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const fromItem = itemsPerPage * currentPage - (itemsPerPage - 1);\n  const toItem = (itemsPerPage * currentPage < 42)\n    ? (itemsPerPage * currentPage)\n    : 42;\n  const visibleItems = items.slice(fromItem - 1, toItem);\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageGhange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromItem} - ${toItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleSelectChange}\n          >\n            {optioinsWithId.map(option => (\n              <option value={option.name} key={option.id}>{option.name}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageGhange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item.id}>{`Item ${item.number}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}